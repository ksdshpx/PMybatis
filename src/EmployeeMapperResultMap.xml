<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.ksdshpx.mybatis.dao.EmployeeMapperResultMap">
	<!-- public Employee getEmployeeById(Integer id); -->
	<select id="getEmployeeById" resultMap="MyEmp">
		select id,last_name,email,gender from tbl_employee where id = #{id}
	</select>
	<!-- 自定义映射
		 type:最终结果集封装的类型
		 <id>:完成主键列的映射
		 	 column:指定结果集的列名
		 	 property:指定对象的属性名
		 <result>:完成普通列的映射
	 -->
	 
	 <!-- 
	 	    id  last_name   email              gender   
             5   wangWu     wangWu@163.com       1  
	  -->
	<resultMap type="cn.ksdshpx.mybatis.beans.Employee" id="MyEmp">
		<id column="id" property="id"/>
		<result column="last_name" property="lastName"/>
		<result column="email" property="email"/>
		<result column="gender" property="gender"/>
	</resultMap>
	
	<!-- 需求：查询员工对象，并获取其所在的部门信息-->
	<!-- public Employee getEmpAndDept(Integer id); -->
	<select id="getEmpAndDept" resultMap="MyEmpAndDept">
		SELECT e.`id` as eid,e.`last_name`,e.`email`,e.`gender`,d.`id` as did,d.`dept_name`
		FROM tbl_employee e,tbl_dept d
		WHERE e.`d_id` = d.`id` AND e.`id` = #{id};
	</select>
	<!-- 
	 	    id  last_name  email             gender      id  dept_name  
             1  zhangSan   zhangSan@163.com  1            1  研发部  
	 -->
	<resultMap type="cn.ksdshpx.mybatis.beans.Employee" id="MyEmpAndDept">
		<id column="eid" property="id"/>
		<result column="last_name" property="lastName"/>
		<result column="email" property="email"/>
		<result column="gender" property="gender"/>
		<!-- 级联属性 
		<result column="did" property="dept.id"/>
		<result column="dept_name" property="dept.deptName"/>
		-->
		<!-- 
			association:完成联合属性的映射
				property:指定联合属性
				javaType:指定联合属性的类型
		 -->
		 <association property="dept" javaType="cn.ksdshpx.mybatis.beans.Department">
		 	<id column="did" property="id"/>
		 	<result column="dept_name" property="deptName"/>
		 </association>
		 
	</resultMap>
    <!-- 
    association使用分步查询：
   		 需求：查询员工对象，并获取其所在的部门信息
    	 1. 先根据员工的id查询员工信息
    	 2.使用外键did查询员工的部门信息
    -->
	<!-- public Employee getEmployeeByStep(); -->
	<select id="getEmployeeByStep" resultMap="MyEmpAndDeptByStep">
		select id,last_name,email,gender,d_id from tbl_employee where id = #{id}
	</select>
	<resultMap type="cn.ksdshpx.mybatis.beans.Employee" id="MyEmpAndDeptByStep">
		<id column="id" property="id"/>
		<result column="last_name" property="lastName"/>
		<result column="email" property="email"/>
		<result column="gender" property="gender"/>
		<!-- 分步查询 -->
		<association property="dept" 
			select="cn.ksdshpx.mybatis.dao.DepartmentMapperResultMap.getDeptById"
			column="d_id">
		</association>
		
		<!-- 分步查询之延迟加载 
			在全局配置文件中加上
			<setting name="lazyLoadingEnabled" value="true"/>
			<setting name="aggressiveLazyLoading" value="false"/>
		-->
	</resultMap>
	
	<!-- public List<Employee> getEmpsById(Integer did); -->
	<select id="getEmpsById" resultType="cn.ksdshpx.mybatis.beans.Employee">
		select id,last_name,email,gender,d_id from tbl_employee where d_id = #{did}
	</select>

</mapper>